[{"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\index.js":"1","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\App.js":"2","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\reportWebVitals.js":"3","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\PetDetails.jsx":"4","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\PetForm.jsx":"5","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\Pets.jsx":"6","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\updatePet.jsx":"7"},{"size":535,"mtime":1660821502635,"results":"8","hashOfConfig":"9"},{"size":671,"mtime":1662365117819,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1660821503084,"results":"11","hashOfConfig":"9"},{"size":1975,"mtime":1662374629168,"results":"12","hashOfConfig":"9"},{"size":3746,"mtime":1662374721849,"results":"13","hashOfConfig":"9"},{"size":1886,"mtime":1662374690652,"results":"14","hashOfConfig":"9"},{"size":4566,"mtime":1662374668993,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b4ixv7",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\index.js",[],[],"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\App.js",[],[],"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\PetDetails.jsx",["40"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory, Link } from \"react-router-dom\";\r\nimport myStyles from \"./styles.module.css\";\r\n\r\nconst linkStyle = {\r\n  justifyContent: \"end\",\r\n  display: \"flex\",\r\n  margin: \"20px\",\r\n};\r\n\r\nconst PetDetails = (props) => {\r\n  const [pet, setPet] = useState({});\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [like, setLike] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pets/\" + id)\r\n      .then((res) => setPet(res.data))\r\n      .catch((err) => console.error(err));\r\n  }, []);\r\n\r\n  function handleDelete(pet) {\r\n    axios.delete(\"http://localhost:8000/api/pets/\" + pet._id).then((res) => {\r\n      history.push(\"/\");\r\n    });\r\n  }\r\n\r\n  function handleLike(like) {\r\n    setLike(like + 1);\r\n  }\r\n\r\n  return (\r\n    <div className={myStyles.container}>\r\n      <h1 className={myStyles.base}>Pet Shelter</h1>\r\n      <Link style={linkStyle} to=\"/\">\r\n        back to home\r\n      </Link>\r\n      <div className={myStyles.tow}>\r\n        <h4 className={myStyles.base}>Details About {pet.name}</h4>\r\n        <button id={myStyles.del} onClick={(event) => handleDelete(pet)}>\r\n          Adopt {pet.name}\r\n        </button>\r\n      </div>\r\n      <div className={myStyles.form}>\r\n        <h3 className={myStyles.base}>Pet Type: {pet.type}</h3>\r\n        <p className={myStyles.info}>Description: {pet.description}</p>\r\n        <h3 className={myStyles.base}> Skills:</h3>\r\n        <ul className={myStyles.info}>\r\n          <li>{pet.skill1}</li>\r\n          <li>{pet.skill2}</li>\r\n          <li>{pet.skill3}</li>\r\n        </ul>\r\n        <div>\r\n          <p>\r\n            {\" \"}\r\n            <button id={myStyles.submit} onClick={() => handleLike(like)}>\r\n              Like\r\n            </button>\r\n            &nbsp;&nbsp; {like} Likes\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetDetails;\r\n","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\PetForm.jsx",[],[],"C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\Pets.jsx",["41"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport myStyles from \"./styles.module.css\";\r\n\r\nconst linkStyle = {\r\n  justifyContent: \"end\",\r\n  display: \"flex\",\r\n  margin: \"20px\",\r\n};\r\n\r\nfunction Pets(props) {\r\n  const [petsList, setPetsList] = React.useState([]);\r\n  const [isLoaded, setLoaded] = React.useState(false);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"UseEffect running now\");\r\n    axios.get(\"http://localhost:8000/api/pets\").then((response) => {\r\n      console.log(response);\r\n      setPetsList(response.data);\r\n      setLoaded(true);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"900px\", margin: \"auto\" }}>\r\n      {!isLoaded ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div>\r\n          <h1 className={myStyles.base}>Pet Shelter</h1>\r\n          <Link to=\"/new\" style={linkStyle}>\r\n            Add a Pet to the Shelter\r\n          </Link>\r\n          <h4 className={myStyles.base}>\r\n            {\" \"}\r\n            These pets are looking for a good home\r\n          </h4>\r\n          <br></br>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {petsList.map((pet, index) => (\r\n                <tr key={index}>\r\n                  <td>{pet.name}</td>\r\n                  <td>{pet.type}</td>\r\n                  <td>\r\n                    <Link to={`/${pet._id}`}>details</Link> &nbsp;&nbsp;|\r\n                    &nbsp;&nbsp;\r\n                    <Link to={`/${pet._id}/edit`}>edit</Link>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pets;\r\n","C:\\Users\\aat12\\Downloads\\MERN\\week 3\\Belt_Exam\\client\\src\\components\\updatePet.jsx",["42"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport myStyles from \"./styles.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nconst linkStyle = {\r\n  justifyContent: \"end\",\r\n  display: \"flex\",\r\n  margin: \"20px\",\r\n};\r\n\r\nconst UpdatePet = () => {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [type, setType] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [skill1, setSkill1] = useState(\"\");\r\n  const [skill2, setSkill2] = useState(\"\");\r\n  const [skill3, setSkill3] = useState(\"\");\r\n  const [errors, setErrors] = useState([]);\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8000/api/pets/\" + id)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setName(res.data.name);\r\n        setType(res.data.type);\r\n        setDescription(res.data.description);\r\n        setSkill1(res.data.skill1);\r\n        setSkill2(res.data.skill2);\r\n        setSkill3(res.data.skill3);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setIsLoading(false);\r\n        console.log(\"We have an error\");\r\n      });\r\n  }, []);\r\n\r\n  const onSubmitHandler = (e) => {\r\n    //prevent default behavior of the submit\r\n    e.preventDefault();\r\n    //make a post request to create a new product\r\n    axios\r\n      .put(\"http://localhost:8000/api/pets/\" + id, {\r\n        name,\r\n        type,\r\n        description,\r\n        skill1,\r\n        skill2,\r\n        skill3,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        const data = err.response.data;\r\n        const errorMessages = [];\r\n        if (\"errors\" in data) {\r\n          for (let field in data.errors) {\r\n            const validationError = data.errors[field];\r\n            errorMessages.push(validationError.message);\r\n          }\r\n        }\r\n        setErrors(errorMessages);\r\n      });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={myStyles.container}>\r\n        <h1 className={myStyles.base}>...Loading </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={myStyles.container}>\r\n      <h1 className={myStyles.base}>Pet Shelter</h1>\r\n      <Link to={\"/\"} style={linkStyle}>\r\n        back to home\r\n      </Link>\r\n      <h4 className={myStyles.base}> Edit {name}</h4>\r\n      {errors.map((errorMessage, index) => (\r\n        <ul key={index} className={myStyles.err}>\r\n          Error:\r\n          <li>{errorMessage}</li>\r\n        </ul>\r\n      ))}\r\n      <form onSubmit={onSubmitHandler} className={myStyles.form}>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <p>\r\n              Pet Name:\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n              />\r\n            </p>\r\n            <p>\r\n              Pet Type:\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setType(e.target.value)}\r\n                value={type}\r\n              />\r\n            </p>\r\n            <p>\r\n              Pet Description:\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                value={description}\r\n              />\r\n            </p>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div>\r\n              <label>Skills (Optional):</label>\r\n            </div>\r\n            <div>\r\n              <label>Skill 1:</label>\r\n              <input\r\n                onChange={(e) => setSkill1(e.target.value)}\r\n                value={skill1}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Skill 2:</label>\r\n              <input\r\n                onChange={(e) => setSkill2(e.target.value)}\r\n                value={skill2}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label>Skill 3:</label>\r\n              <input\r\n                onChange={(e) => setSkill3(e.target.value)}\r\n                value={skill3}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" id={myStyles.btn}>\r\n          Edit Pet\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdatePet;\r\n",{"ruleId":"43","severity":1,"message":"44","line":23,"column":6,"nodeType":"45","endLine":23,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":15,"column":9,"nodeType":"49","messageId":"50","endLine":15,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":42,"column":6,"nodeType":"45","endLine":42,"endColumn":8,"suggestions":"51"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["52"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar",["53"],{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},"Update the dependencies array to be: [id]",{"range":"57","text":"58"},{"range":"59","text":"58"},[636,638],"[id]",[1301,1303]]